import{e,u as a,c as r,Q as s,o as x}from"./C0H42NkS.js";import{_ as p}from"./zb0-IfDH.js";const d=""+new URL("01-640.mQc-YYCh.webp",import.meta.url).href,c=""+new URL("02-640.DG8E0xnM.webp",import.meta.url).href,o=""+new URL("03-640.1KlzyGFm.png",import.meta.url).href,k=""+new URL("04-640.DhOnIrZ1.webp",import.meta.url).href,l=""+new URL("upload_process.k2sdfAD4.png",import.meta.url).href,m={class:"min-h-screen bg-background dark:bg-background-dark"},_=e({__name:"tutorial",setup(n){return a({title:"使用教程"}),(i,t)=>(x(),r("div",m,t[0]||(t[0]=[s('<div class="max-w-3xl mx-auto py-12 px-4 sm:px-6 lg:px-8"><div class="prose dark:prose-invert max-w-none"><h1 class="text-text dark:text-text-dark">使用教程</h1><p class="text-text/80 dark:text-text-dark/80">使用本插件如同使用在线Markdown 工具一样，在左侧编写Markdown内容，右侧则会实时渲染精美排版的内容。本插件还支持粘贴图片自动上传到选定的图床及获取图片URL，自动插入到Markdown 内容。之所以从原始的开源web项目改造成插件形式，宗旨是让用户可以用上公众号素材库，只不过使用之前需要做一点配置，如下介绍：</p><h2 class="text-text dark:text-text-dark">开通公众号开发者</h2><p class="text-text/80 dark:text-text-dark/80">登录公众号后台，访问 设置与开发&gt;基本配置，启用开发者，并走账号登录认证流程获取AppSecret，注意保存AppSecret。</p><img src="'+d+'"><h2 class="text-text dark:text-text-dark">配置IP白名单</h2><p class="text-text/80 dark:text-text-dark/80">这一步配置IP白名单，是为了插件访问公众号openapi接口能够正常访问设置的。通过访问 <a href="https://www.whatismyip.com/" class="text-primary dark:text-primary-dark">https://www.whatismyip.com/</a> 获取本机的公网IP，或者在插件中配置好appID和appSecret后尝试上传图片，并观察网络请求的报错，从报错中就可以得知被拒绝访问的IP地址，即是我们的公网IP地址。</p><p class="text-text/80 dark:text-text-dark/80">通过 设置与开发&gt;基本配置的IP白名单， 或者 设置与开发 &gt; 安全中心 进行配置</p><img src="'+c+'"><p class="text-text/80 dark:text-text-dark/80">配置完IP白名单稍微耐心等待下，可能要等10分钟才能生效</p><h2 class="text-text dark:text-text-dark">插件中配置账号密钥</h2><p class="text-text/80 dark:text-text-dark/80">右键弹出菜单，选择上传图片，然后选择公众号图床tab，填入账号密钥（只有web版本才需要代理域名）</p><img src="'+o+'"><h2 class="text-text dark:text-text-dark">素材保存情况</h2><p class="text-text/80 dark:text-text-dark/80">图片内容是保存到微信公众号后台的素材库默认分组的</p><img src="'+k+'"><h2 class="text-text dark:text-text-dark">web版如何接入公众号素材库</h2><p class="text-text/80 dark:text-text-dark/80">虽然这个教程主要目的是介绍浏览器插件对接方式的，但是由于很多用户在使用web版时对于如何配置代理域名疑问较多。</p><p class="text-text/80 dark:text-text-dark/80">简洁明了的答案是，将项目中的`doocs/md/example`的worker.js 文件部署到cloudflare的workers服务，参考相关官方文档部署完后可以获得一个调用域名，就是我们想要的代理域名了，比如：https://xxx.xxx.workers.dev 。 这里给一个部署教程： `https://mp.weixin.qq.com/s/DUFj2i1waw-X7AKi4DA8uQ`</p><p class="text-text/80 dark:text-text-dark/80">还有一个偷懒的做法，在本地启动这个代理服务，然后配置代理域名：`http://localhost:8787` ，启动方式如下，</p><pre>        <code>\n          cd example\n          npm install\n          npm run dev\n        </code>\n      </pre><h2 class="text-text dark:text-text-dark">web及浏览器插件图片上传流程图</h2><img src="'+l+'" class="w-96 h-full"><h2 class="text-text dark:text-text-dark">联系作者</h2><p class="text-text/80 dark:text-text-dark/80">插件作者公众号：哪里不会点哪里</p><img src="'+p+'" class="w-48 h-48"></div></div>',1)])))}});export{_ as default};
